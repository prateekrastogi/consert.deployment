#Very flaky default api-Versioning. Take caution while changing it. Different from what stated is docs.

# Creating service for consert
apiVersion: v1
kind: Service
metadata:
  name: consert-service
spec:
  selector:
    app: consert                    #selection of service by label
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 80                #the port on the cluster needs to opened
  type: LoadBalancer                #for opening to cloud provider loadbalancer i.e. public

---

#Deploying consert on kubernetes cluster
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: consert-deployment
spec:
  replicas: 2 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: consert          #labels for service selector to work properly
    spec:
      containers:
      - name: consert
        image: gcr.io/consert-146421/bitbucket-prateekrastogi-backend:9e94d5081d25a815ef17d842850c189ef65e62c2
        ports:
        - containerPort: 80    #opens port for the kubernetes cluster

---

# Creating StorageClass for mongodb
apiVersion: storage.k8s.io/v1beta1
kind: StorageClass
metadata:
  name: mongodb
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd

---

#Creating Mongo Service
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  selector:
    role: mongo
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None

---

#Deploying mongodb cluster with StatefulSets
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 3
  template:
    metadata:
      labels:
        role: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--smallfiles"
            - "--noprealloc"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "mongodb"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi