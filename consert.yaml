#Valid for kubectl 1.6.4 & kubernetes 1.6.4
#Very flaky default api-Versioning provided. Take extreme caution while changing api-Version fields. It is different from what was stated in docs.
#Deployment takes some time to properly deploy and connect all components with each other. Have some patience while staging.


# Creating service for frontend
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend                    #selection of service by label
  ports:
    - protocol: "TCP"
      port: 3000                        #Always opening the port 80 externally due to issue revolving exposing port on cloudflare and loadbalancer
      targetPort: 3000                #the port on the concerned cluster pods that needs to be attached to service

---

#Deploying frontend on kubernetes cluster
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1 # tells deployment to run no. of pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: frontend          #labels for service selector to work properly
    spec:
      containers:
      - name: frontend
        image: gcr.io/consert-171717/bitbucket-prateekrastogi-frontend:d2ad3368cf0bd9a7ce14c097a6cd3be30c1fc7ea
        ports:
        - containerPort: 3000    #opens port for the other pods of kubernetes cluster

---

#Horizontal Pod Scaling of frontend Deployment
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: frontend
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: frontend
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70

---

# Creating service for backend
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend                    #selection of service by label
  ports:
    - name: http
      protocol: "TCP"
      port: 3100                        #Always opening the port 80 externally due to issue revolving exposing port on cloudflare and loadbalancer
      targetPort: 3100                #the port on the concerned cluster pods that needs to be attached to service
    - name: ws
      protocol: "TCP"
      port: 5000
      targetPort: 5000                #the port on the concerned cluster pods that needs to be attached to service

---

#Deploying backend on kubernetes cluster
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1 #tells deployment to run no. of pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: backend          #labels for service selector to work properly
    spec:
      containers:
      - name: backend
        image: gcr.io/consert-171717/bitbucket-prateekrastogi-backend:a412a3d8bf3c74962782bb895f62d5c3aa9c3e71
        ports:
        - containerPort: 3100    #opens port for the other pods of kubernetes cluster
          name: http
        - containerPort: 5000
          name: ws

---

#Horizontal Pod Scaling of backend Deployment
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: backend
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: backend
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70

---

# Creating service for seeder
apiVersion: v1
kind: Service
metadata:
  name: seeder
spec:
  selector:
    app: seeder                    #selection of service by label
  ports:
    - protocol: "TCP"
      port: 3200                       #Always opening the port 80 externally due to issue revolving exposing port on cloudflare and loadbalancers
      targetPort: 3200                #the port on the concerned cluster pods that needs to be attached to service

---

#Deploying seeder on kubernetes cluster
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: seeder-deployment
spec:
  replicas: 1 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: seeder          #labels for service selector to work properly
    spec:
      containers:
      - name: seeder
        image: gcr.io/consert-171717/bitbucket-prateekrastogi-seeder:3298f7431253854eee5889d6483c53947860c2d1
        ports:
        - containerPort: 3200    #opens port for the other pods of kubernetes cluster

---

#Horizontal Pod Scaling of seeder Deployment
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: seeder
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: seeder
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70

---

